package com.example.demo

import org.springframework.boot.json.BasicJsonParser
import org.springframework.boot.json.JsonParser

class Sample(
        val sample: Map<String, Int>
)

class Size(
        val size: MutableMap<String, MutableMap<String, Int>> = mutableMapOf(
                ("XS" to mutableMapOf(
                        "chest" to 12,
                        "waist" to 13,
                        "sleeve" to 14,
                        "bodyLength" to 15,
                        "sleeveLength" to 16)),
                ("M" to mutableMapOf(
                        "chest" to 22,
                        "waist" to 23,
                        "sleeve" to 24,
                        "bodyLength" to 25,
                        "sleeveLength" to 26))))
//        val name: String,
//        val samples: ArrayList<Sample>)
{
    companion object DefSizeForMenTshirt {
        val defSizeForMenTshirt =
//                Size("XS", arrayListOf(
//                        Sample("chest", 12),
//                        Sample("waist", 13),
//                        Sample("sleeve", 14),
//                        Sample("bodyLength", 15),
//                        Sample("sleeveLength", 16))),
//                Size("M", arrayListOf(
//                        Sample("chest", 22),
//                        Sample("waist", 23),
//                        Sample("sleeve", 24),
//                        Sample("bodyLength", 25),
//                        Sample("sleeveLength", 26)))
                mapOf(("XS" to mapOf(
                        "chest" to 12,
                        "waist" to 13,
                        "sleeve" to 14,
                        "bodyLength" to 15,
                        "sleeveLength" to 16)),
                        ("M" to mapOf(
                                "chest" to 22,
                                "waist" to 23,
                                "sleeve" to 24,
                                "bodyLength" to 25,
                                "sleeveLength" to 26)))

//                Pair("XS", SizeTshirt(12, 13, 14, 15, 16)),
//                Pair("M", SizeTshirt(120, 130, 140, 150, 160))

    }

}


//data class SizeTshirt(val name: String, val samples: ArrayList<Sample>) : Size(name, samples)
//        var chest: Int,
//        var waist: Int,
//        var sleeve: Int,
//        var bodyLength: Int,
//        var sleeveLength: Int


data class Mark(var value: Int, var description: String)

class MarksList(var marksName: String, var marksList: ArrayList<Mark>, var startDeviation: Int) {

}

open class MarksForWear(var generalMarks: Array<String> = defGenMarks) {
    companion object DefGeneralMarks {
        val defGenMarks = arrayOf(
                "Размер не подходит",
                "Размер не подходит",
                "Размер не подходит",
                "Размер не подходит",
                "Нелучший размер",
                "Нелучший размер",
                "Нелучший размер",
                "Хорошо",
                "Хорошо",
                "Отлично")
    }

    fun getMark() {}
}

class MarksForTshirt(var generalMarksForTshirt: Array<String> = defGenMarks) : MarksForWear(generalMarksForTshirt) {

    companion object DefVal {
        val defGenMarks = DefGeneralMarks.defGenMarks
        val chest = MarksList(
                "Обхват груди",
                arrayListOf(
                        Mark(1, "тесное облегание, изделие ужимает грудь и подчеркивает все рельефы фигуры в этой области"),
                        Mark(2, "очень плотное облегание в области груди"),
                        Mark(3, "очень плотное облегание в области груди"),
                        Mark(4, "очень плотное облегание в области груди"),
                        Mark(5, "плотное облегание в области груди"),
                        Mark(6, "плотное облегание в области груди"),
                        Mark(7, "плотное облегание в области груди"),
                        Mark(8, "изделие облегает в области груди"),
                        Mark(8, "изделие облегает в области груди"),
                        Mark(9, "изделие плавно повторяет контуры тела в области груди"),
                        Mark(9, "изделие плавно повторяет контуры тела в области груди"),
                        Mark(10, "комфортное облегание в области груди"),
                        Mark(10, "комфортное облегание в области груди"),
                        Mark(9, "комфортное облегание в области груди"),
                        Mark(9, "комфортное облегание в области груди"),
                        Mark(8, "свобода в груди немного больше оптимальной, но вполне допустимая для данной модели"),
                        Mark(8, "свобода в груди немного больше оптимальной, но вполне допустимая для данной модели"),
                        Mark(7, "свобода в груди больше оптимальной для данной модели"),
                        Mark(6, "свобода в груди больше оптимальной для данной модели"),
                        Mark(5, "свобода в груди больше оптимальной для данной модели"),
                        Mark(4, "свобода в груди больше оптимальной для данной модели"),
                        Mark(3, "свобода в груди больше оптимальной для данной модели"),
                        Mark(2, "свобода в груди больше оптимальной для данной модели"),
                        Mark(1, "лишняя свобода и объемность по груди, недопустимая для данной модели")),
                -14)
        val waist = MarksList(
                "Обхват талии",
                arrayListOf(
                        Mark(1, "очень плотно облегает талию, нарушая необходимую свободу для данной модели"),
                        Mark(2, "очень плотно облегает, подчеркивая особенности фигуры в области талии"),
                        Mark(3, "очень плотно облегает, подчеркивая особенности фигуры в области талии"),
                        Mark(4, "очень плотно облегает, подчеркивая особенности фигуры в области талии"),
                        Mark(5, "изделие плотно облегает фигуру в области талии"),
                        Mark(6, "изделие плотно облегает фигуру в области талии"),
                        Mark(7, "изделие плотно облегает фигуру в области талии"),
                        Mark(8, "изделие плавно облегает тело в области талии"),
                        Mark(9, "изделие плавно облегает тело в области талии"),
                        Mark(9, "комфортное облегание в области талии, необходимое для данной модели"),
                        Mark(10, "комфортная свобода в области талии"),
                        Mark(10, "комфортная свобода в области талии"),
                        Mark(10, "комфортная свобода в области талии"),
                        Mark(9, "комфортная свобода в области талии, необходимая для данной модели"),
                        Mark(9, "комфортная свобода в области талии, необходимая для данной модели"),
                        Mark(9, "комфортная свобода в области талии, необходимая для данной модели"),
                        Mark(8, "свобода в талии немного больше оптимальной, но вполне допустима для данной модели, изделие скрывает талию"),
                        Mark(8, "свобода в талии немного больше оптимальной, но вполне допустима для данной модели, изделие скрывает талию"),
                        Mark(8, "свобода в талии немного больше оптимальной, но вполне допустима для данной модели, изделие скрывает талию"),
                        Mark(8, "свобода в талии немного больше оптимальной, но вполне допустима для данной модели, изделие скрывает талию"),
                        Mark(7, "свобода в талии больше оптимальной, но вполне допустима для данной модели, изделие скрывает талию"),
                        Mark(7, "свобода в талии больше оптимальной, но вполне допустима для данной модели, изделие скрывает талию"),
                        Mark(7, "свобода в талии больше оптимальной, но вполне допустима для данной модели, изделие скрывает талию"),
                        Mark(6, "свобода в талии больше оптимальной, изделие скрывает талию"),
                        Mark(5, "свобода в талии больше оптимальной, изделие скрывает талию"),
                        Mark(4, "лишняя свобода в талии"),
                        Mark(3, "лишняя свобода в талии"),
                        Mark(2, "лишняя свобода в талии"),
                        Mark(1, "лишняя свобода в талии")),
                -10)

        val sleeve = MarksList("Обхват рукава",
                arrayListOf(
                        Mark(1, "рукав пережимает верхнюю часть руки, сложно поднять руку"),
                        Mark(2, "рукав пережимает верхнюю часть руки, сложно поднять руку"),
                        Mark(3, "рукав очень плотно облегает руку"),
                        Mark(4, "рукав очень плотно облегает руку"),
                        Mark(5, "рукав плотно облегает руку"),
                        Mark(6, "рукав плотно облегает руку"),
                        Mark(7, "рукав плотно облегает руку"),
                        Mark(8, "рукав облегает руку"),
                        Mark(9, "рукав облегает руку"),
                        Mark(10, "рукав плавно повторяет контуры руки"),
                        Mark(10, "рукав плавно повторяет контуры руки"),
                        Mark(9, "комфортная ширина рукава для данной модели"),
                        Mark(8, "комфортная свобода в рукаве для данной модели"),
                        Mark(8, "комфортная свобода в рукаве для данной модели"),
                        Mark(7, "свобода в рукаве больше необходимой, но вполне допустима для данной модели"),
                        Mark(6, "свобода в рукаве больше необходимой, но допустима для данной модели"),
                        Mark(5, "свобода в рукаве больше необходимой, но допустима для данной модели"),
                        Mark(4, "свобода в рукаве больше необходимой"),
                        Mark(3, "свобода в рукаве больше необходимой"),
                        Mark(2, "свобода в рукаве больше необходимой"),
                        Mark(1, "слишком широкий рукав, провисание ткани под руками")
                ),
                -10)
    }

    var chest = DefVal.chest
    var waist = DefVal.waist
    var sleeve = DefVal.sleeve
}

